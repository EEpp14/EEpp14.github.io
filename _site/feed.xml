<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://eepp14.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://eepp14.github.io/" rel="alternate" type="text/html" /><updated>2024-04-22T09:29:53-04:00</updated><id>https://eepp14.github.io/feed.xml</id><title type="html">My Portfolio</title><subtitle>This is my portfolio website running with the jekyll blackcurrant theme</subtitle><entry><title type="html">VMWare Pro Homelab | Monitoring Suricata/Windows Logs With Wazuh</title><link href="https://eepp14.github.io/blog/homelab-wazuh/" rel="alternate" type="text/html" title="VMWare Pro Homelab | Monitoring Suricata/Windows Logs With Wazuh" /><published>2024-01-18T00:00:00-05:00</published><updated>2024-01-18T00:00:00-05:00</updated><id>https://eepp14.github.io/blog/homelab-wazuh</id><content type="html" xml:base="https://eepp14.github.io/blog/homelab-wazuh/"><![CDATA[<h2 id="enabling-use-of-freebsd-repos-on-pfsense">Enabling use of FreeBSD repos on pfSense</h2>

<p>This section will cover how to enable the Wazuh SIEM solution to ingest Suricata logs from pfSense. In order to do this we must first lay some groundwork. Wazuh packages are not part of the official pfSense reposititories, so we are going to need to install our Wazuh agent via the use of the official FreeBSD repos. In pfsense launch a prompt by typing in ‘8’ and hitting enter. By default, FreeBSD repositories are not enabled, so we will need to change that in some config files using the vi editor. If you don’t know how to use vi there are plenty of helpful guides out there. Enter the following commands to alter the config files:</p>

<pre><code class="language-unix">cd ..
vi /usr/local/etc/pkg/repos/FreeBSD.conf
vi /usr/local/etc/pkg/repos/pfSense.conf
</code></pre>

<p>We need to change the following lines as below in both files. When you are done type :wq to write and quit out of vi.</p>

<pre><code class="language-unix">FreeBSD: { enabled: no  }
</code></pre>

<p>TO</p>

<pre><code class="language-unix">FreeBSD: { enabled: yes  }
</code></pre>

<h2 id="installing-the-wazuh-agent-for-pfsense">Installing the Wazuh Agent for pfSense</h2>

<p>Now that we have changed the configs, we can go about installing the wazuh agent from the FreeBSD package repository. In order to do this we need to run the following commands:</p>

<pre><code class="language-unix"># we need to update the package cache first, you might get a warning about a mismatch, ignore this and enter 'y' to continue

pkg update

# this searches for the official wazuh agent

pkg search wazuh-agent

# replace the x.x.xx with the version of wazuh you have installed on your server or ova installation

pkg install wazuh-agent-x.x.xx
</code></pre>

<p>Once the installation process is done, we will need to revert the config files back to how they were before.</p>

<pre><code class="language-unix">FreeBSD: { enabled: yes  }
</code></pre>

<p>TO</p>

<pre><code class="language-unix">FreeBSD: { enabled: no  }
</code></pre>

<p><img src="/assets/images/homelab/wazuh-setup/pfsense-freebsd.jpg" alt="pfSense vi FreeBSD" /></p>

<p>Once you’ve reverted them back to base, run these two commands as well</p>

<pre><code class="language-unix">pkg clean
pkg update
</code></pre>

<h2 id="configuration-and-enabling-the-agent">Configuration and Enabling the Agent</h2>

<p>The installation is now finalized! In the output after the installation we were given these suggestions, so let’s go ahead and do that in order.</p>

<pre><code class="language-unix">--
Wazuh Agent was installed

1) Copy /etc/locatime to /var/ossec/etc directory

   # cp /etc/localtime /var/ossec/etc

2) You must edit /var/ossec/etc/ossec.conf.sample for your setup and rename/copy
   it to ossec.conf

   Take a look wazuh configuration at the following url:

   https://documentation.wazuh.com/current/user-manual/index.html

3) You can find additional useful files installed at

  # /var/ossec/packages_files/agent_installation_scripts

4) Add Wazuh agent to /etc/rc.conf

  # sysrc wazuh_agent_enable="YES"

5) Start Wazuh agent

  # service wazuh_agent start

6) Enjoy it ;)
</code></pre>

<p>First, it recommends we copy the /etc/localtime to /var/ossec/etc, we can do that with the command it gave us above. Once that’s done we need to edit the config file. It says we need to rename the sample, yet it already created a config file for us, so we can ignore this step. Vi into the file and change the IP address to that of the server where the manager is stored. For us, that should be 10.0.11.3. Write and quit out of vi.</p>

<p><img src="/assets/images/homelab/wazuh-setup/pfsense-wazuhip.jpg" alt="Setting Wazuh Manager IP Address" /></p>

<p>We’ve already done the groundwork for each of our interfaces by enabling JSON output to the syslog of pfSense, so now let’s start the agent. Run the following commands:</p>

<pre><code class="language-unix">sysrc wazuh_agent_enable="YES"
service wazuh-agent start
</code></pre>

<p>You would need to do this every time you boot up pfSense, but if you wanted to automate the commands you could create a shell script that automates the process. Place them in the /usr/local/etc/rc.d directory. It might look something like the image below.</p>

<p><img src="/assets/images/homelab/wazuh-setup/pfsense-script1.jpg" alt="Wazuh Agent Automation Script" /></p>

<h2 id="accessing-wazuh-dashboard--ingesting-suricata-logs">Accessing Wazuh Dashboard &amp; Ingesting Suricata Logs</h2>

<p>We can now head over to the Wazuh dashboard at 10.0.11.3 from our Kali machine. Our dashboard should now be populated with one active agent, and if we click on it we can see that it’s our pfSense agent.</p>

<p><img src="/assets/images/homelab/wazuh-setup/wazuh-dash.jpg" alt="Wazuh Dashboard" /></p>

<p><img src="/assets/images/homelab/wazuh-setup/wazuh-active.jpg" alt="Wazuh pfSense Agent" /></p>

<p>Now we can actually begin to have Suricata logs ingested into Wazuh. On the homepage click the dropdown arrow and under to ‘Management’ click ‘Groups’. Click on ‘Add New Group’ and name it ‘pfSense’. Then click the pencil icon to edit the group configuration settings. You will be presented with the empty agent.conf file of the pfSense group. We need to add the following lines:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;localfile&gt;
    &lt;log_format&gt;json&lt;/log_format&gt;
    &lt;location&gt;/var/log/suricata/*/eve.json&lt;/location&gt;
&lt;/localfile&gt;
</code></pre></div></div>

<p><img src="/assets/images/homelab/wazuh-setup/wazuh-agentconfig.jpg" alt="Wazuh pfSense Agent Config" /></p>

<p>Click on the group we just created and then click ‘Manage Agents’. Select the pfSense agent and add it to the group. We can also go ahead and remove pfSense from the default group.</p>

<p><img src="/assets/images/homelab/wazuh-setup/wazuh-manageagents.jpg" alt="Wazuh pfSense Security Events" /></p>

<p><img src="/assets/images/homelab/wazuh-setup/wazuh-addtogroup.jpg" alt="Wazuh pfSense Security Events" /></p>

<p>After this is complete, assuming Suricata is currently active on our interfaces in pfSense, we should now be getting logs from Suricata in our Wazuh dashboard! If we click on our agent within the dashboard, we can now view security events based on the logs 
we receive from Suricata. I went ahead and did some nmap scans from my Kali machine towards the Vulnhub VM, so it’s already a bit populated.</p>

<p><img src="/assets/images/homelab/wazuh-setup/wazuh-events.jpg" alt="Wazuh pfSense Security Events" /></p>

<p>This brings us to the very end of the homelab build. Congrats on making it to the end and good luck on your security journey!</p>]]></content><author><name>Ethan Epperson</name></author><category term="blog" /><summary type="html"><![CDATA[Enabling use of FreeBSD repos on pfSense]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://eepp14.github.io/assets/images/thumbnails/homelab/Homelab-setup-guide-wazuh.jpg" /><media:content medium="image" url="https://eepp14.github.io/assets/images/thumbnails/homelab/Homelab-setup-guide-wazuh.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">VMWare Pro Homelab | Suricata Setup on pfSense with Snort Alerts</title><link href="https://eepp14.github.io/blog/homelab-suricata/" rel="alternate" type="text/html" title="VMWare Pro Homelab | Suricata Setup on pfSense with Snort Alerts" /><published>2024-01-16T00:00:00-05:00</published><updated>2024-01-16T00:00:00-05:00</updated><id>https://eepp14.github.io/blog/homelab-suricata</id><content type="html" xml:base="https://eepp14.github.io/blog/homelab-suricata/"><![CDATA[<h2 id="installing-suricata-package-manager">Installing Suricata Package Manager</h2>

<p>This section will be a rundown on how to install Suricata on pfSense and enable it for intrusion detection and network security monitoring. We will not be using inline intrusion prevention because we don’t want to block our traffic when we launch attacks. We will be using pfSense’s package manager to complete the installation. Go to ‘System’ → ‘Package Manager’ → ‘Available Packages’ and search for ‘Suricata’. Click ‘install’ and ‘confirm’. It’s that simple! Now we can move on to configuring the rules.</p>

<p><img src="/assets/images/homelab/suricata-setup/suricata-install.jpg" alt="Suricata Package Installation" /></p>

<h2 id="configuring-suricata-rules">Configuring Suricata Rules</h2>

<p>Now that Suricata has been downloaded, head over to ‘Services’ → ‘Suricata’ → ‘Updates’. As we can see, all of our rule sets are not enabled. We need to change that. Go to ‘Global Settings’ and make sure that your chosen rules look identical to the images provided below. You can find the custom URL for ETOpen <a href="https://rules.emergingthreats.net/OPEN_download_instructions.html">here</a>. Use the highlighted option in the image provided below. Once you have everything in order, click save and then head back to ‘Updates’ to download and install the the rule sets. This may take some time.</p>

<p><img src="/assets/images/homelab/suricata-setup/suricata-update.jpg" alt="Suricata Update Page" /></p>

<p><img src="/assets/images/homelab/suricata-setup/suricata-etopen.jpg" alt="Suricata Package Installation" /></p>

<p><img src="/assets/images/homelab/suricata-setup/suricata-rulelist.jpg" alt="Suricata Rulelist" /></p>

<p><img src="/assets/images/homelab/suricata-setup/suricata-interval.jpg" alt="Suricata Interval Update Times" /></p>

<p><img src="/assets/images/homelab/suricata-setup/suricata-update2.jpg" alt="Suricata Update Page with Rules" /></p>

<h2 id="setting-up-interfaces">Setting Up Interfaces</h2>

<p>Now that our rule sets have been updated we can start adding each interface to Suricata. We will start with LAN first. Go to ‘Interfaces’ and let’s add a new one. You might see a message that says we need to disable some network interface options. Let’s go to ‘System’ → ‘Advanced’ →  ‘Networking’ and disable the three settings that pfSense flagged so that Suricata can function properly on our interfaces. This will require a reboot.</p>

<p><img src="/assets/images/homelab/suricata-setup/suricata-warning.jpg" alt="Suricata Interface Warning Message" /></p>

<p><img src="/assets/images/homelab/suricata-setup/suricata-disable.jpg" alt="Suricata Disabled Interface Rules" /></p>

<p>Once that’s complete, head back to ‘Interfaces’ so we can setup each interface with the rule sets. We will start with the LAN. Click ‘add’ to add a new interface. Everything setting can remain as default EXCEPT make sure to enable ‘EVE JSON log’. leave the output type as ‘FILE’. Every other EVE setting can stay as is.</p>

<p><img src="/assets/images/homelab/suricata-setup/suricata-lan.jpg" alt="Suricata LAN Configuration" /></p>

<p>Make sure to avoid clicking ‘Block Offenders’ so we aren’t accidentally blocking intrusion attempts we try to conduct ourselves. It’s best practice to only turn on this feature after the Suricata rules have been tuned over a week or so to eliminate false positives. We are not really concerned with blocking anything for the purpose of this lab, but it’s important to note incase you want to mess around with it later.</p>

<p>Once you have saved the LAN interface settings, copy them for OPT1 and OPT2. Your interfaces list should look like the image below.</p>

<p><img src="/assets/images/homelab/suricata-setup/suricata-interfaces.jpg" alt="Suricata Disabled Interface Rules" /></p>

<p>In each interface, we will need to select which rule sets the interface will load at startup. Enable all of rule sets by clicking ‘Select All’. Do this for each interface in the ‘xxx Categories’ menu, where ‘xxx’ is the currently selected interface. Make sure to save and apply. Selecting all will likely cause false positives, so you will need to whittle down the rules over time to eliminate these. I cannot walk you through this process as it occurs over time. There are plenty of useful guides for how to fine tune alerts in Suricata on Youtube.</p>

<p><img src="/assets/images/homelab/suricata-setup/suricata-selectall.jpg" alt="Suricata Select All Rule sets" /></p>

<p>Now we must enable Suricata on each interface in the ‘interfaces’ menu. For each interface, click the start button next to it, and voila, Suricata is now ingesting traffic and providing alerts for each interface. Below are some sample LAN alerts.</p>

<p><img src="/assets/images/homelab/suricata-setup/suricata-enabled.jpg" alt="Suricata All Interfaces Enabled" /></p>

<p><img src="/assets/images/homelab/suricata-setup/suricata-lan.jpg" alt="Suricata Example LAN Alert" /></p>

<table>
  <tbody>
    <tr>
      <td>That’s all for this part. Soon, we will be installing Wazuh on Ubuntu. You can find the next part, ‘VMWare Pro Homelab</td>
      <td>Wazuh’, in the [blog] section of this site.</td>
    </tr>
  </tbody>
</table>]]></content><author><name>Ethan Epperson</name></author><category term="blog" /><summary type="html"><![CDATA[Installing Suricata Package Manager]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://eepp14.github.io/assets/images/thumbnails/homelab/Homelab-setup-guide-suricata.jpg" /><media:content medium="image" url="https://eepp14.github.io/assets/images/thumbnails/homelab/Homelab-setup-guide-suricata.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">VMWare Pro Homelab | Active Directory Forest Setup pt. 2</title><link href="https://eepp14.github.io/blog/homelab-ad-forest-pt.2/" rel="alternate" type="text/html" title="VMWare Pro Homelab | Active Directory Forest Setup pt. 2" /><published>2024-01-14T00:00:00-05:00</published><updated>2024-01-14T00:00:00-05:00</updated><id>https://eepp14.github.io/blog/homelab-ad-forest-pt.2</id><content type="html" xml:base="https://eepp14.github.io/blog/homelab-ad-forest-pt.2/"><![CDATA[<h2 id="creating-new-user-account-objects">Creating New User Account Objects</h2>

<p>Continuing the setup of our new active directory forest, we now need to add some user account objects to the domain. Go to ‘Tools’ → ‘Active Directory Users and Computers’. You should see the domain we just created. Clicking on it will reveal all of the organizational units (OUs) within that domain. At the bottom of the list we can see ‘Users’. Clicking on it reveals a lot of different security groups. Before we proceed further, we can clean the users up a bit.</p>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/ad-users+comps.jpg" alt="Active Directory Users and Computers" /></p>

<p>Let’s right click our domain → ‘New’ → ‘Organizational Unit’. A new object creation window will pop up. Let’s name it ‘Groups’. After it’s created we can move all of the security groups from users to this OU. Now we have separated our users from our groups.</p>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/ad-newou.jpg" alt="Active Directory New OU Creation" /></p>

<p>These are what the ‘Users’ and ‘Groups’ OUs should look like after the fact.</p>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/ad-groups.jpg" alt="Active Directory Groups OU" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/ad-users.jpg" alt="Active Directory Users OU" /></p>

<p>Now we can add some new user objects. Let’s create a new domain admin account as well as a standard user account. Right click in the empty space of the ‘Users’ OU  → ‘New’  → ‘User’. Name your users whichever you please. We want to keep our passwords the same across the board for this vulnerable active directory forest we are creating. Passwords are often reused in networks and password cracking/hash attacks will allow us to gain access to other accounts/machines through scripts like crackmapexec. Below are two user accounts that I’ve created.</p>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/ad-newuser.jpg" alt="Active Directory User 1 Creation" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/ad-userpass.jpg" alt="Active Directory User 1 Password" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/ad-userfinish.jpg" alt="Active Directory User 1 Finished" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/ad-newuser2.jpg" alt="Active Directory User 2 Creation" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/ad-userpass2.jpg" alt="Active Directory User 2 Password" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/ad-userfinish2.jpg" alt="Active Directory User 2 Finished" /></p>

<p>Once our standard users are created, we will be creating a new administrative SQL Service account. Right click the admin account → ‘Copy’. Usually a SQL Service account would not be an administrator, but it is often something that a domain admin might accidentally overlook. By creating an admin SQL Service account, we can perform exploits such as Kerberoasting. For the password, we can change make this one different from the previous ones. Sse whatever weak password you want. I’m gonna use ‘Qwerty123!’. Make sure your new SQL Service administrative account looks the same as mine below.</p>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/ad-sqlservice.jpg" alt="Active Directory SQL Service Account Creation" /></p>

<p><img src="assets/images/homelab/activedir-vms-setup-pt2/ad-sqlpassword.jpg" alt="Active Directory SQL Service Account Password" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/ad-sqlfinish.jpg" alt="Active Directory SQL Service Account Finish" /></p>

<p>We will also be putting the password directly into the description of the account. Sometimes domain admins will make the mistake of thinking that only they are able to see the description of admin account objects, but this is not true. We can leverage this vulnerability in our exploits. Right click the SQL Service account → ‘Properties’. Add the password to the description and then click ‘Apply’.</p>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/ad-sqlproperties.jpg" alt="Active Directory SQL Service Account Properties" /></p>

<p>We’re now done with adding all of the user objects we need for the time being. Your final view of the ‘Users’ OU should look like the image below.</p>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/ad-usersfinal.jpg" alt="Active Directory Users OU Finalized" /></p>

<h2 id="setting-up-service-principal-name-for-sql-service">Setting Up Service Principal Name for SQL Service</h2>

<p>Now that we have created the SQL Service account we need to create a corresponding SPN for it. Open up command prompt as administrator and type in the following command replacing the domain controller/domain name where appropriate.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>setspn -a 'YOUR-DC'/SQLService.YOURDOMAIN.local: 60111 YOURDOMAIN\SQLService
</code></pre></div></div>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/ad-setspn.jpg" alt="Active Directory Setting SPN" /></p>

<p>To check if the SPN was set correctly, type the following command replacing with your domain name when appropriate.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>setspn -T YOURDOMAIN.local -Q */*
</code></pre></div></div>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/ad-spnfound.jpg" alt="Active Directory Checking SPN" /></p>

<p>With this step now finished, our domain is now vulnerable to Kerberoasting attacks.</p>

<h2 id="creating-an-smb-share-to-open-ports">Creating an SMB Share to Open Ports</h2>

<p>Since SMB is a service that many attacks aim to exploit, we will need to open SMB ports 139/445. In the left-hand sidebar click ‘File and Storage Services’ → ‘Shares’ to get to the shares menu. Click on the ‘TASKS’ dropdown and then click ‘New Share’.</p>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/ad-newshare.jpg" alt="Active Directory Create New Share" /></p>

<p>The New Share Wizard will be launched. Follow through the wizard using the below images as a guide.</p>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/smb-profile.jpg" alt="New Share Wizard Profile" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/smb-location.jpg" alt="New Share Wizard Location" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/smb-name.jpg" alt="New Share Wizard Name" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/smb-other.jpg" alt="New Share Wizard Other" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/smb-permissions.jpg" alt="New Share Wizard Permissions" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/smb-confirm.jpg" alt="New Share Wizard Confirmation" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/smb-results.jpg" alt="New Share Wizard Results" /></p>

<p>Once that’s done, the shares page should now have our new share. SMB should now be open in the network, allowing us to make attacks on 139/445 against the DC and it’s clients. Speaking of clients, we now need to set those up as well.</p>

<h2 id="windows-10-enterprise-installation">Windows 10 Enterprise Installation</h2>

<p>We will be adding two Windows 10 Enterprise client machines to the forest.I will skip the OS installation as it is near identical to that of our server machine. Don’t forget to set the MAC address for each VM before launching for the first time. The specs for each machine are listed below. For the security questions, they don’t matter so put whatever you want.</p>

<p><img src="/" alt="Windows 10 Client Machine 1 Specs" /></p>

<p><img src="/" alt="Windows 10 Client Machine 2 Specs" /></p>

<p>Once the OS is installed for both machines. Use the images below as a guide for finalizing the setup.</p>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/win10-region.jpg" alt="Windows 10 Setup Region" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/win10-keyboard.jpg" alt="Windows 10 Setup Keyboard" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/win10-account.jpg" alt="Windows 10 Setup Join Domain" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/win10-user.jpg" alt="Windows 10 Setup User" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/win10-pass.jpg" alt="Windows 10 Setup Password" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/win10-passconfirm.jpg" alt="Windows 10 Setup Confirm Password" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/win10-question1.jpg" alt="Windows 10 Setup Security Questions" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/win10-services.jpg" alt="Windows 10 Services" /></p>

<h2 id="joining-the-clients-to-the-domain">Joining the Clients to the Domain</h2>

<p>Before we join the clients to the domain, let’s first rename our machines. You can do this through the same process we used to rename our domain controller.</p>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/win10-renamepc.jpg" alt="Windows 10 Client Rename Device" /></p>

<p>Once that’s complete, hold Win+R to open the Windows run command. Type in ‘ncpa.cpl’ to bring up the network connections. Right click ethernet0 → ‘Properties’ → ‘Internet Protocol Version 4 (TCP/IPv4)’ IP address of the domain controller (which should be 10.0.13.2 if you set it up correctly within pfSense) as the DNS gateway. We can also explicitly set our IP address and default gateway to our domain controller.</p>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/win10-ncpa.jpg" alt="Windows 10 Run Command" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/win10-connections.jpg" alt="Windows 10 Change IP/DNS Gateway" /></p>

<p>Once this is done, we can restart the machine so that the PC name change takes effect. After the reboot, in the search bar enter ‘domain’ and choose ‘Access work or school’. Click ‘Connect’ → ‘Join this device to a local Active Directory domain’. When prompted, enter the name of your domain. In the next step, enter the credentials for the domain admin account. Finally, choose the skip option on the last screen. Afterwards the device will need a restart.</p>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/win10-workschool.jpg" alt="Windows 10 Work and School" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/win10-joindomain.jpg" alt="Windows 10 Join Domain Connect" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/win10-joindomain2.jpg" alt="Windows 10 Join Domain Enter Domain Name" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/win10-joindomain3.jpg" alt="Windows 10 Join Domain Admin Credentials" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/win10-joindomain4.jpg" alt="Windows 10 Join Domain Skip" /></p>

<p>If we go back to our domain controller, we should now see the device itself as a new object within the ‘Computers’ OU. If that’s the case then you’ve successfully added the first client to the domain. Go ahead and repeat all of the above steps in this section for the second client machine.</p>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/ad-pcadded.jpg" alt="AD Updated Computers OU" /></p>

<h2 id="creating-local-administrators-for-the-client-machines">Creating Local Administrators for the Client Machines</h2>

<p>It’s a common thing in active directory networks to setup domain users as local administrators on the device that they use. We are going to do this so that we are able to perform more attacks and escalate privileges. First, we need to log into the client machine as the domain admin account. To do this on the login page click other and then type in ‘DOMAINNAME\Administrator’. Of course, replace DOMAINNAME with your own domain’s name.</p>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/win10-otheruser.jpg" alt="Windows 10 Login Other User" /></p>

<p>Once in, type ‘computer management’ into the search bar and select that option. In the computer management window, click ‘Local Computers and Groups’ → ‘Groups’ → ‘Administrators. Here we are going to add our user account as a local admin. Once that’s done, we are also going to add the other domain user account that we created as a local admin on this machine as well. This way we cna make our domain vulnerable to relay attacks. Repeat the below steps for the second client machine as well.</p>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/win10-management.jpg" alt="Windows 10 Search Computer Management" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/win10-management2.jpg" alt="Windows 10 Search Computer Management" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/win10-management3.jpg" alt="Windows 10 Search Computer Management" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup-pt2/win10-management4.jpg" alt="Windows 10 Search Computer Management" /></p>

<p>With that, our full active directory forest is setup. Following all of the steps so far our lab should be equipped for performing several attacks such as LLMNR/NBT-NS poisoning, SMB Relay Attacks, Pass-the-Password, Pass-the-Hash, Token Impersonation, Kerberoasting, Golden Ticket, enumeration with Powerview/Bloodhound, credential dumping, and more.</p>

<table>
  <tbody>
    <tr>
      <td>We will be setting up Wazuh to ingest Suricata logs from pfSense soon. You can find the next part, ‘VMWare Pro Homelab</td>
      <td>Active Directory Forest Setup Pt. 2’, in the [blog] section of this site.</td>
    </tr>
  </tbody>
</table>]]></content><author><name>Ethan Epperson</name></author><category term="blog" /><summary type="html"><![CDATA[Creating New User Account Objects]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://eepp14.github.io/assets/images/thumbnails/homelab/Homelab-setup-guide-windows.jpg" /><media:content medium="image" url="https://eepp14.github.io/assets/images/thumbnails/homelab/Homelab-setup-guide-windows.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">VMWare Pro Homelab | Active Directory Forest Setup pt. 1</title><link href="https://eepp14.github.io/blog/homelab-ad-forest/" rel="alternate" type="text/html" title="VMWare Pro Homelab | Active Directory Forest Setup pt. 1" /><published>2024-01-13T00:00:00-05:00</published><updated>2024-01-13T00:00:00-05:00</updated><id>https://eepp14.github.io/blog/homelab-ad-forest</id><content type="html" xml:base="https://eepp14.github.io/blog/homelab-ad-forest/"><![CDATA[<h2 id="creating-the-active-directory-network-vms">Creating the Active Directory Network VMs</h2>

<p>Here are the minimum specifications and dhcp allocations within the webConfigurator for the server and client machine. We will not be setting up the 2nd client machine at this time because we are going to clone the first client VM after OS installation to save ourselves time and effort.</p>

<p><img src="/assets/images/homelab/activedir-vms-setup/server-specs.jpg" alt="Windows Server 2019 Specifications" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup/opt2-dhcp.jpg" alt="OPT2 Static DHCP Allocations" /></p>

<h2 id="installing-windows-server-2019">Installing Windows Server 2019</h2>

<p>Power on the machine and make sure to press any key to boot from the CD/DVD drive or you will get a time out error. You will be introduced to the ‘Windows Setup’ wizard. Choose your language, time, and keyboard settings and click ‘Next’. Click ‘Install Now’ after that. When it asks which operating system you want to use, select the standard evaluation with desktop experience. On the next page, accept the license agreement. After that, we want to select the custom installation option. Choose the drive we have already created and click ‘Next;. The server will now begin installing, so this may take some time. Once it’s complete, you will have to make a password for the admin account. Click ‘Finish’ once done.</p>

<p><img src="/assets/images/homelab/activedir-vms-setup/server-setup.jpg" alt="Server Setup Wizard" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup/server-license.jpg" alt="Server Setup License Agreement" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup/server-os.jpg" alt="Server Setup OS Selection" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup/server-custom.jpg" alt="Server Setup Custom Installation" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup/server-drive.jpg" alt="Server Setup Wizard Drive Selection" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup/server-installing.jpg" alt="Server Setup Wizard Installing" /></p>

<p>Make sure you don’t choose too complex of a password as we want to make this domain actively weak.</p>

<p><img src="/assets/images/homelab/activedir-vms-setup/server-password.jpg" alt="Server Setup Wizard Password Creation" /></p>

<p>Now we can login. To send a ctrl-alt-del to the virtual machine you can press the highlighted button below to do so. Once in we can do a quick ipconfig to make sure that pfSense DHCP is working correctly for this machine.</p>

<p><img src="/assets/images/homelab/activedir-vms-setup/vmware-ctrl.jpg" alt="VMWare ctrl-alt-del" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup/server-cmd.jpg" alt="Windows Server Connection Test" /></p>

<p>Now that we know everything is in working order we can setup our server to act a a domain controller, but first let’s rename the machine. Go to the search bar and type ‘settings’ to access server settings. On the settings window, search once again for ‘pc name’ and choose the option that appears. Under ‘Device specifications’ you can then change the device name to whatever you please. Go with whatever theme you want. Now we must restart for the change to take effect.</p>

<p><img src="/assets/images/homelab/activedir-vms-setup/server-search.jpg" alt="Windows Server Search Settings" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup/server-search2.jpg" alt="Windows Server Search PC Name" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup/server-rename.jpg" alt="Windows Server Renaming Device" /></p>

<h2 id="configuring-the-server-as-domain-controller">Configuring the Server as Domain Controller</h2>

<p>When we log in again, we should be greeted with the ‘Server Manager’. This is the interface we will be using to configure the DC. Go to ‘Manage’ → ‘Add Roles and Features’. The wizard will launch, click through until you get to ‘Server Roles’. Once there we are going to skip through the ‘Before you Begin’ section. Under ‘Installation Type’ we are going to leave it at role-based/feature-based. On ‘Server Selection’, our current server should be selected by default so skip through this part. For ‘Server Roles’, we are going to select active directory domain service. For ‘Features’, we don’t need to select anything additional. Skip through the ‘AD DS’ and ‘AD CS’ screen,s and then confirm and install, Once it’s finished we will need to manually reboot, so go ahead and do so.</p>

<p><img src="/assets/images/homelab/activedir-vms-setup/server-roles.jpg" alt="Server Roles and Features Wizard" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup/server-roles-begin.jpg" alt="Server Roles and Features Wizard Beginning" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup/server-roles-type.jpg" alt="Server Roles and Features Wizard Installation Type" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup/server-roles-selection.jpg" alt="Server Roles and Features Wizard Server Selection" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup/server-roles-ds.jpg" alt="Server Roles and Features Wizard Domain Controller" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup/server-roles-features.jpg" alt="Server Roles and Features Wizard Features" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup/server-roles-adds.jpg" alt="Server Roles and Features Wizard AD DS" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup/server-roles-confirmation.jpg" alt="Server Roles and Features Wizard Confirm Installation" /></p>

<p>Once it’s restarted, We can go back to the server manager to configure the domain controller. There should be a flag with a yellow caution sign in the menu bar up top, let’s click on it. When we do, we should see the option ‘Promote this server to a domain controller’. Click on it to launch the domain services configuration wizard.</p>

<p><img src="/assets/images/homelab/activedir-vms-setup/dc-promote.jpg" alt="DC Configuration Promote" /></p>

<p>Select ‘Add a new forest’ and choose a root domain name. On ‘Domain Controller Options’, choose a recovery password and leave as default. For ‘DNS Options’ we can ignore the warning and continue. Skip past ‘Additional Options’ and ‘Paths’, leaving them as default. Click past ‘Review Options’. On the ‘Prerequisite Check’ screen, you should see three warnings, but those are to be ignored as well. We can then begin installation. Once it’s done it will automatically restart after a short period. Once it’s restarted we can configure the server as a certificate authority.</p>

<p><img src="/assets/images/homelab/activedir-vms-setup/dc-deploy.jpg" alt="DC Configuration Wizard Deployment" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup/dc-options.jpg" alt="DC Configuration Wizard Domain Controller Options" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup/dc-dns.jpg" alt="DC Configuration Wizard DNS Options" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup/dc-additional.jpg" alt="DC Configuration Wizard Additional Options" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup/dc-paths.jpg" alt="DC Configuration Wizard Additional Options" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup/dc-review.jpg" alt="DC Configuration Wizard Review Options" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup/dc-prereq.jpg" alt="DC Configuration Wizard Prerequisite Check" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup/dc-results.jpg" alt="DC Configuration Wizard Prerequisite Check" /></p>

<h2 id="configuring-server-as-certificate-authority">Configuring Server as Certificate Authority</h2>

<p>This process is the same as above except when we get to ‘Server Roles’ in the roles and features setup wizard, we need to choose ‘Active Directory Certificate Services’ instead. Under ‘Role Services’ leave it as default.</p>

<p><img src="/assets/images/homelab/activedir-vms-setup/server-roles-certauth.jpg" alt="Server Roles and Features Wizard Server Roles" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup/server-roles-adcs.jpg" alt="Server Roles and Features Wizard AD CS" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup/server-roles-adcs-services.jpg" alt="Server Roles and Features Wizard Role Services" /></p>

<p>Like before, go to the top menu bar and click the yellow caution sign under the flag and click ‘Configure Active Directory Certificate Services on the destination server’. The wizard will launch. Make sure every step looks identical to the images below. Once it’s done installing, the machine will restart automatically.</p>

<p><img src="/assets/images/homelab/activedir-vms-setup/adcs-credentials.jpg" alt="AD CS Configuration Credentials" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup/adcs-roles.jpg" alt="AD CS Configuration Role Services" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup/adcs-setuptype.jpg" alt="AD CS Configuration Setup Type" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup/adcs-catype.jpg" alt="AD CS Configuration CA Type" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup/adcs-key.jpg" alt="AD CS Private Key" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup/adcs-crypto.jpg" alt="AD CS Cryptography" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup/adcs-caname.jpg" alt="AD CS CA Name" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup/adcs-validity.jpg" alt="AD CS CA Validity" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup/adcs-certdb.jpg" alt="AD CS Configuration Certificate Database" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup/adcs-confirm.jpg" alt="AD CS Configuration Confirmation" /></p>

<p><img src="/assets/images/homelab/activedir-vms-setup/adcs-results.jpg" alt="AD CS Configuration Results" /></p>

<p>Congrats, you are halfway done with setting up your AD forest in your AD subnet. In the next part, we will cover how to create new user account objects, setup an SPN for SQL service, open SMB ports, and join client machines to the forest. You can find it in the further reading section below or in the sidebar under ‘Categories’ → ‘Homelab’.</p>]]></content><author><name>Ethan Epperson</name></author><category term="blog" /><summary type="html"><![CDATA[Creating the Active Directory Network VMs]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://eepp14.github.io/assets/images/thumbnails/homelab/Homelab-setup-guide-windows.jpg" /><media:content medium="image" url="https://eepp14.github.io/assets/images/thumbnails/homelab/Homelab-setup-guide-windows.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">VMWare Pro Homelab | DVWA Setup on Ubuntu Server</title><link href="https://eepp14.github.io/blog/homelab-dvwa/" rel="alternate" type="text/html" title="VMWare Pro Homelab | DVWA Setup on Ubuntu Server" /><published>2024-01-12T00:00:00-05:00</published><updated>2024-01-12T00:00:00-05:00</updated><id>https://eepp14.github.io/blog/homelab-dvwa</id><content type="html" xml:base="https://eepp14.github.io/blog/homelab-dvwa/"><![CDATA[<h2 id="installing-dependencies">Installing Dependencies</h2>

<p>In this part, we will be going over how to setup DVWA on the ubuntu server within the isolated network and accessing the application through Kali Linux. First, we need to login to the machine and make sure we have root privileges through ‘sudo su’. We should have all of our packages updated from before so we can skip that step. We are going to need to download some dependencies as per the DVWA github page. The command for obtaining those dependencies is listed below.</p>

<pre><code class="language-unix">apt install php apache2 mariadb-server php-mysqli php-gd libapache2-mod-php
</code></pre>

<p>Now we need to get to the directory where we will be cloning the DVWA git repository. Enter the following commands:</p>

<pre><code class="language-unix">cd ..
cd ..
cd var/www/html/
git clone https://github.com/digininja/DVWA
</code></pre>

<p><img src="/assets/images/homelab/dvwa-setup/dvwa-gitclone.jpg" alt="DVWA Git Clone" /></p>

<p>First we should remove the default ‘index.html’ file that is made when we installed apache2 so it isn’t loaded over DVWA.</p>

<pre><code class="language-unix">rm index.html
</code></pre>

<p>At this point we can add the DVWA vm to our alias of vulnerable machines so that outbound connections are blocked at this point. We will no longer need an outbound connection except for periodic updates at which point we can remove DVWA from the alias briefly so that it’s not affected by the ‘Vuln_VMs’ firewall rule. You could also choose to create a rule that is disabled by default that allows outbound connections from the DVWA machine and only toggle it on when those updates need to be made.</p>

<p><img src="/assets/images/homelab/dvwa-setup/alias-changed.jpg" alt="DVWA Added to Alias" /></p>

<h2 id="config-file--database-creation">Config File &amp; Database Creation</h2>

<p>Now that we have the repository cloned, we should be able to see the structure of the website after we cd into it. After that, we need to alter the template file so enter the following commands:</p>

<pre><code class="language-unix">cd DVWA/
cd config/
nano config.inc.php.dist
</code></pre>
<p><img src="/assets/images/homelab/dvwa-setup/dvwa-config.jpg" alt="DVWA Config Path" /></p>

<p>We can change a few things in the file if we so wish, such as the database name or username. I wouldn’t recommend changing the password as it’s already a vulnerable application and we don’t really need to do that. We can leave the port alone as well. The security level should be changed to reflect the difficulty we want to tackle when trying to penetrate the application. The only other three settings to worry about are the security level, authentication, and recaptcha. I will be setting the security level to ‘low’ to begin with. Disable authentication should be set to ‘true’.</p>

<p>As for recaptcha, we need to go to the <a href="https://www.google.com/recaptcha/admin">url</a> specified within the file to generate the keys. Give it a label and choose ‘Challenge (v2)’ and the ‘I’m not a robot Checkbox’ options as this is what’s recommended for DVWA. I’m using the loopback domain. Feel free to choose whatever you want. Once the public/private key pair is generated then we can paste them into the file on the VM. Your config file should look like the image below. Write and save the file.</p>

<p><img src="/assets/images/homelab/dvwa-setup/dvwa-nano.jpg" alt="DVWA Config Nano" /></p>

<p>In truth, what we just did is edit a template, so we need to copy the contents of the .dist file to that of an actual config file with the following command:</p>

<pre><code class="language-unix">cp config/config.inc.php.dist config/config.inc.php
</code></pre>

<p>We must create a database and database user so enter the following commands (some of mine fail because I’ve already run them, but yours should be fine):</p>

<pre><code class="language-unix">mariadb
create database dvwa;
create user dvwa@localhost identified by 'p@ssw0rd';
grant all on dvwa.* to dvwa@localhost;
flush privileges;
exit;
</code></pre>

<h2 id="accessing-dvwa-from-kali--final-touches">Accessing DVWA From Kali &amp; Final Touches</h2>

<p>Now that our server is in working order, navigate to Kali Linux and open your browser. Navigate to ‘https://10.0.12.2’. You will see the DVWA index with a folder icon, click on it and you will be sent to the homepage for DVWA. On the DVWA homepage, click on ‘Setup/Reset DB’. Click the ‘Create / Reset Database’ button. You will also notice some PHP functions are disabled as well as two directories we need to make writeable in order for everything to function correctly. We will remedy these issues right now.</p>

<p><img src="/assets/images/homelab/dvwa-setup/dvwa-setuppage.jpg" alt="DVWA Config Setup Page" /></p>

<p>Execute the following commands as root in the root directory:</p>

<pre><code class="language-unix">chmod 777 /var/www/html/DVWA/hackable/uploads/
chmod 777 /var/www/html/DVWA/config
</code></pre>

<p>You can verify the permissions by entering the following commands:</p>

<pre><code class="language-unix">ls -ld /var/www/html/DVWA/hackable/uploads/
ls -ld /var/www/html/DVWA/config
</code></pre>

<p><img src="/assets/images/homelab/dvwa-setup/dvwa-permissions.jpg" alt="DVWA Config Permissions" /></p>

<p>As noted before there are three php functions that are red. We only need to really worry about changing ‘PHP function allow_url_include’. We will need to change the php.ini directory to enable this function. Execute the below commands as root in the root directory. In the nano editor navigate to the ‘fopen wrappers’ section and change the permission for ‘PHP function allow_url_include’ to ‘On’. Write to file, save, and exit the editor.</p>

<pre><code class="language-unix">cd etc/php/8.1/apache2
nano php.ini
</code></pre>

<p><img src="/assets/images/homelab/dvwa-setup/dvwa-allowurl.jpg" alt="DVWA Config php.ini" /></p>

<p>We need to restart the server now for these changes to take effect. Once it’s rebooted, jump back over to Kali and refresh the DVWA page. We should now see the changes have taken effect. If your screen looks the image below, then congrats, you’re all done setting up DVWA!</p>

<table>
  <tbody>
    <tr>
      <td>we will move on to setting up our Windows Server 2019 VM and making the active directory forest. You can find the next part, ‘VMWare Pro Homelab</td>
      <td>Active Directory Forest Setup Pt. 1’, in the [blog] section of this site.</td>
    </tr>
  </tbody>
</table>]]></content><author><name>Ethan Epperson</name></author><category term="blog" /><summary type="html"><![CDATA[Installing Dependencies]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://eepp14.github.io/assets/images/thumbnails/homelab/Homelab-setup-guide-dvwa.jpg" /><media:content medium="image" url="https://eepp14.github.io/assets/images/thumbnails/homelab/Homelab-setup-guide-dvwa.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">VMWare Pro Homelab | Metasploitable2 &amp;amp; Vulnhub</title><link href="https://eepp14.github.io/blog/homelab-metasploitable2-vulnhub/" rel="alternate" type="text/html" title="VMWare Pro Homelab | Metasploitable2 &amp;amp; Vulnhub" /><published>2024-01-11T00:00:00-05:00</published><updated>2024-01-11T00:00:00-05:00</updated><id>https://eepp14.github.io/blog/homelab-metasploitable2-vulnhub</id><content type="html" xml:base="https://eepp14.github.io/blog/homelab-metasploitable2-vulnhub/"><![CDATA[<h2 id="creatingimporting-the-isolated-network-vms">Creating/Importing the Isolated Network VMs</h2>

<p>We will need to do some preparatory work and create an Ubuntu server machine before we get to setting up DVWA itself in the next part. The Metasploitable2 and VulnHub VMs will be imported into VMWare pre-configured, so we will have to manually adjust the specifications for those machines. As I mentioned in the intro, there are a multitude of VMs to choose from on VulnHub. Feel free to make your own choice about which one you want to start with. You can always add more later. I will be starting with the ‘Symfonos: 1’ machine, a beginner level box. This machine will be using DVWA on Ubuntu server. Here are the recommended specifications and the DHCP allocation in the webConfigurator.</p>

<p><img src="/assets/images/homelab/isolated-vms-setup/dvwa-spec.jpg" alt="DVWA Specifications" /></p>

<p><img src="/assets/images/homelab/isolated-vms-setup/dvwa-dhcp.jpg" alt="DVWA DHCP" /></p>

<h2 id="installing-ubuntu-server">Installing Ubuntu Server</h2>

<p>Power on the machine and choose ‘Try or Install Ubuntu Server’ and you will be greeted with the Ubuntu installation wizard after a short time. Choose your language, keyboard, and the standard server installation options. When you get to ‘Network Connections’ you should see the IP/MAC if you did everything correctly in the webConfigurator. Click ‘Done’. On the next page it asks us for a proxy, we aren’t using one so skip this section. Accept the default settings on the archive mirror page. On both of the storage configuration pages leave them as is and hit ‘Done’. When asked to wipe the disk, click ‘Confirm’. On the next screen, we will be able to choose a server name, username, and password. Once you have them entered, click ‘Done’. We will not be using the pro version, so skip this step. On the next page, we want to install SSH so make sure to enable it before clicking ‘Done’. We will not be installing any snaps, so skip and click ‘Done’. Finally, we can allow Ubuntu to install. Once its done, reboot the system. Don’t forget to test connections and update.</p>

<p><img src="/assets/images/homelab/isolated-vms-setup/ubuntu-language.jpg" alt="Ubuntu Setup Language" /></p>

<p><img src="/assets/images/homelab/isolated-vms-setup/ubuntu-keyboard.jpg" alt="Ubuntu Setup Keyboard" /></p>

<p><img src="/assets/images/homelab/isolated-vms-setup/ubuntu-type.jpg" alt="Ubuntu Setup Type" /></p>

<p><img src="/assets/images/homelab/isolated-vms-setup/ubuntu-network.jpg" alt="Ubuntu Setup Network" /></p>

<p><img src="/assets/images/homelab/isolated-vms-setup/ubuntu-proxy.jpg" alt="Ubuntu Setup Proxy" /></p>

<p><img src="/assets/images/homelab/isolated-vms-setup/ubuntu-mirror.jpg" alt="Ubuntu Setup Mirror" /></p>

<p><img src="/assets/images/homelab/isolated-vms-setup/ubuntu-storage.jpg" alt="Ubuntu Setup Storage" /></p>

<p><img src="/assets/images/homelab/isolated-vms-setup/ubuntu-storage2.jpg" alt="Ubuntu Setup Storage Confirmation" /></p>

<p><img src="/assets/images/homelab/isolated-vms-setup/ubuntu-profile.jpg" alt="Ubuntu Setup Profile" /></p>

<p><img src="/assets/images/homelab/isolated-vms-setup/ubuntu-pro.jpg" alt="Ubuntu Setup Pro" /></p>

<p><img src="/assets/images/homelab/isolated-vms-setup/ubuntu-pro.jpg" alt="Ubuntu Setup SSH" /></p>

<p><img src="/assets/images/homelab/isolated-vms-setup/ubuntu-snaps.jpg" alt="Ubuntu Setup Snaps" /></p>

<p><img src="/assets/images/homelab/isolated-vms-setup/ubuntu-installing.jpg" alt="Ubuntu Setup Installing" /></p>

<h2 id="importing--upgrading-metasploitable2-vm">Importing &amp; Upgrading Metasploitable2 VM</h2>

<p>To import Metasploitable2 into VMWare, ctrl-x and paste the unzipped metasploitable2 folder into the directory where all your virtual machines are stored. Once that’s done, go to ‘File’ → ‘Scan for Virtual Machines’. Make sure that Metasploitable is the box that is clicked. Follow the wizard and VMWare should register the metasploitable machine at this point.</p>

<p><img src="/assets/images/homelab/isolated-vms-setup/meta-scan.jpg" alt="Metasploitable2 Scan" /></p>

<p>It should now show up under the library pane of VMware. Now we will need to reconfigure the hardware settings. Click on the VM and you should see the option ‘Upgrade this virtual machine’, choose it. The ‘Change Hardware Compatibility Wizard’ will be launched. On the wizard click through and choose the newest workstation version from the dropdown. On the next screen, choose ‘Alter this virtual machine’. On the ‘Review Changes’ screen, click ‘Finish’ to convert and upgrade the virtual machine for use with Workstation X.X.X (17.5.x for the most current version at this time).</p>

<p><img src="/assets/images/homelab/isolated-vms-setup/meta-hardware.jpg" alt="Metasploitable2 Hardware" /></p>

<p><img src="/assets/images/homelab/isolated-vms-setup/meta-compatibility.jpg" alt="Metasploitable2 Workstation Compatibility" /></p>

<p><img src="/assets/images/homelab/isolated-vms-setup/meta-changes.jpg" alt="Metasploitable2 Review Changes" /></p>

<p><img src="/assets/images/homelab/isolated-vms-setup/meta-finished.jpg" alt="Metasploitable2 Finished Upgrading" /></p>

<h1 id="changing-metasploitable2-settings">Changing Metasploitable2 Settings</h1>

<p>Now that we have upgraded the machine, we can change the specifications and set it’s DHCP allocation. Luckily, the OS comes pre-installed so we don’t have to worry about that. Here are recommended specs and the DHCP allocation within the webConfigurator.</p>

<p><img src="/assets/images/homelab/isolated-vms-setup/meta-spec.jpg" alt="Metasploitable2 Specifications" /></p>

<p><img src="/assets/images/homelab/isolated-vms-setup/meta-dhcp.jpg" alt="Metasploitable2 DHCP" /></p>

<p>Next, we can boot up our Metasploitable VM, login with the default credentials, and do the regular connection check. Let’s start with a simple ‘ifconfig -a’ command. As we can see, the machine has the IP/MAC we set for it.</p>

<p><img src="/assets/images/homelab/isolated-vms-setup/meta-ifconfig.jpg" alt="Metasploitable2 ifconfig Command" /></p>

<p>Now we absolutely do not want this machine to be able to have outbound access to other networks or the internet. Let’s try our nslookup and curl commands once again and make sure that it fails. If it fails, then we have successfully blocked outbound traffic from this machine. If it doesn’t, then your firewall rules are not configured correctly and you must change them ASAP. With that, metasploitable2 is done setting up.</p>

<h2 id="importing-and-upgrading-the-symfonos-1-vm">Importing and Upgrading the Symfonos: 1 VM</h2>

<p>Importing the symphonos machine works a lot like metasploitable2, but instead of using the scan wizard to find metasploitable2 we will have to manually select it by going to ‘File’ → ‘Open’ and choosing the .ova file from the symfonos directory. The ‘Import Virtual Machine Wizard’ will launch and allow us to name it and choose an installation directory.</p>

<p><img src="/assets/images/homelab/isolated-vms-setup/symfonos-import.jpg" alt="Symfonos: 1 Import" /></p>

<p>Here are the specifications and DHCP allocation in the webConfigurator.</p>

<p><img src="/assets/images/homelab/isolated-vms-setup/symfonos-spec.jpg" alt="Symfonos: 1 Settings" /></p>

<p><img src="/assets/images/homelab/isolated-vms-setup/vuln-dhcp.jpg" alt="Symfonos: 1 DHCP" /></p>

<p>We don’t need to boot this machine right now as we don’t have the login credentials. The point is to break into it and achieve root access. Be sure to double check your DHCP and firewall rules for OPT1 to make sure everything is in working order.</p>

<table>
  <tbody>
    <tr>
      <td>Once this is complete, then congrats all of the machines in our isolated network are now setup! We will be installing the DVWA web server onto Ubuntu here shortly. You can find the next part, ‘VMWare Pro Homelab</td>
      <td>DVWA’, in the [blog] section of this site.</td>
    </tr>
  </tbody>
</table>]]></content><author><name>Ethan Epperson</name></author><category term="blog" /><summary type="html"><![CDATA[Creating/Importing the Isolated Network VMs]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://eepp14.github.io/assets/images/thumbnails/homelab/Homelab-setup-guide-metasploit-vulnhub.jpg" /><media:content medium="image" url="https://eepp14.github.io/assets/images/thumbnails/homelab/Homelab-setup-guide-metasploit-vulnhub.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">VMWare Pro Homelab | Kali &amp;amp; Tsurugi</title><link href="https://eepp14.github.io/blog/homelab-tsurugi-kali/" rel="alternate" type="text/html" title="VMWare Pro Homelab | Kali &amp;amp; Tsurugi" /><published>2024-01-09T00:00:00-05:00</published><updated>2024-01-09T00:00:00-05:00</updated><id>https://eepp14.github.io/blog/homelab-tsurugi-kali</id><content type="html" xml:base="https://eepp14.github.io/blog/homelab-tsurugi-kali/"><![CDATA[<h2 id="creating-the-management-vms">Creating the Management VMs</h2>

<p>Since we already covered how to use the ‘New Virtual Machine Wizard’ when creating the pfSense machine, we will not be going through those steps. I will provide the specifications of each VM so that you can create them yourself. However, we will cover DHCP static allocations in the webConfigurator as well as OS installations. If you never obtained the ISOs in the introduction post, then go and grab them now. The images below contain the minimum requirements for each machine. We can always bump these numbers up if we need to, but we cannot reduce something like disk space in VMWare, but feel free to better tailor CPU processors/cores, disk size, and RAM to your own hardware.</p>

<p><img src="/assets/images/homelab/management-vms-setup/setup-tsurugi.jpg" alt="Tsurugi Linux Requirements" /></p>

<p><img src="/assets/images/homelab/management-vms-setup/setup-kali.jpg" alt="Kali Linux Requirements" /></p>

<h2 id="static-dhcp-allocation-in-webconfigurator">Static DHCP Allocation in webConfigurator</h2>

<p>We will now configure the DHCP server to statically assign IPs for each of our VMs. Remember that these are the assignments we’ve made thus far.</p>

<ul>
  <li>Our LAN (Management Network) is assigned to 10.0.11.0, OPT1 (IPS 1 &amp; 2 Networks) to 10.0.12.0, and OPT2 (AD network) to 10.0.13.0.</li>
  <li>The LAN interface to 10.0.11.1, the OPT1 interface to 10.0.12.1, and the OPT2 interface to 10.0.13.1.</li>
  <li>The vNIC for vmnet1 is assigned as 10.0.11.2.</li>
  <li>We also set the dynamic DHCP ranges to 10.0.11.10 - 10.0.11.254 for LAN, 10.0.12.10 - 10.0.12.254 for OPT1, and 10.0.13.10 - 10.0.13.254 for OPT2.</li>
</ul>

<p>This means that we will have 7 potential static IP addresses remaining for the LAN segment (10.0.11.3 - 10.0.11.9), 8 for OPT1 (10.0.12.2 - 10.0.12.9), and 8 for OPT2 (10.0.13.2 - 10.0.13.9). If we ever want more machines, we can tighten the range of dynamically assigned IPs to allow for a higher static range. Make sure you have your MAC addresses you just generated because we will be needing those. Let’s go ahead and map out which machines are going to be assigned to which IP for the management (LAN) network:</p>

<ul>
  <li><strong>LAN static DHCP mappings</strong>:
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># We will assign the Wazuh IP now and install this VM later
10.0.11.3 - SIEM (Wazuh) 
10.0.11.4 - Tsurugi
10.0.11.5 - Kali
</code></pre></div>    </div>
  </li>
</ul>

<p>Now that we understand which IP is mapped to which machine, let’s go to ‘Services’ → ‘DHCP Server’. On the ‘LAN’, ‘OPT1’, and ‘OPT2’ tabs, make sure that the ranges are to your desire and no mistakes were made. I accidentally made a typo in the command line assignments for the LAN range (ending at ‘.245’ instead of ‘.254’) so I fixed that. DHCP should be enabled by default for all. On the ‘LAN’ tab, head down to ‘DHCP Static Mappings on LAN’ at the bottom of the page. We need to make sure that the MAC address of the correct VM aligns with the IP address we want to assign to it. Below is an example allocation.</p>

<p><img src="/assets/images/homelab/management-vms-setup/dhcp-example.jpg" alt="Example DHCP Static Allocation" /></p>

<p>Once you’ve added the remaining two IPs, the ‘Static DHCP Mapping on LAN’ section should look like should look like the image below.</p>

<p><img src="/assets/images/homelab/management-vms-setup/dhcp-lan.jpg" alt="DHCP Static Allocations For LAN" /></p>

<h2 id="installing-tsurugi-linux-os">Installing Tsurugi Linux OS</h2>

<p>Power on the Tsurugi machine and then select ‘Install Tsurugi(GUI Mode)’. Once it’s done loading, click on the icon that reads ‘Displays’. Here we can change the screen resolution to ‘1680 x 1050’. Click on ‘Install Tsurugi Linux 2023.2’. A warning will pop up, just click ‘Yes’ to continue. Choose your language and keyboard settings. On the updates screen choose the normal installation and you can choose to install third-party software for graphics and hardware if you so desire. For the type leave it as is and erase the disk when prompted. Choose your location, I will not be showing mine as to not doxx myself. You’ll then need to create a profile and name your machine. Once this is done, you should be ready to install. It might take a while, so get cozy in the meantime. Once its done, we can remove the installation media and restart. You will be prompted to login. Now we can test connectivity as well as update and install packages. Now you have access to a full range of DFIR tools at your disposal.</p>

<p><img src="/assets/images/homelab/management-vms-setup/tsurugi-display.jpg" alt="Tsurugi Resolution" /></p>

<p><img src="/assets/images/homelab/management-vms-setup/tsurugi-language.jpg" alt="Tsurugi Install Wizard Language" /></p>

<p><img src="/assets/images/homelab/management-vms-setup/tsurugi-keyboard.jpg" alt="Tsurugi Install Wizard Keyboard" /></p>

<p><img src="/assets/images/homelab/management-vms-setup/tsurugi-updates.jpg" alt="Tsurugi Install Wizard Updates" /></p>

<p><img src="/assets/images/homelab/management-vms-setup/tsurugi-type.jpg" alt="Tsurugi Install Wizard Type" /></p>

<p><img src="/assets/images/homelab/management-vms-setup/tsurugi-who.jpg" alt="Tsurugi Install Wizard Who" /></p>

<h1 id="installing-kali-linux-os">Installing Kali Linux OS</h1>

<p>For Kali, choose the ‘Graphic Installer’ option. Choose your language, region, and keyboard configurations. Wait for the installer for a moment. On the next screen, change the hostname to whatever you wish. For the domain name make sure it aligns with the domain you setup in the webConfigurator. On the next three screens, give your name and create a username/password. After that, configure the timezone for the clock settings. For the disk option, choose ‘Guided - Use entire disk’ and then select SCSI3. When asked how the disk is to be partitioned, choose ‘All files in one partition’. On the next two pages, click finish and then select yes. The disks will then be partitioned and the base system installed. We will then be asked which software we want to install. Choose whichever packages you like, but I’d leave it at the default. Software will then be installed. This will probably take some time. On the grub boot loader screen choose yes and then on the next select ‘/dev/sda’. The grub boot loader will then be installed and that should be it! Kali is now installed, so once more we can reboot to test connectivity and update packages.</p>

<p><img src="/assets/images/homelab/management-vms-setup/kali-install.jpg" alt="Kali Install Choice" /></p>

<p><img src="/assets/images/homelab/management-vms-setup/kali-language.jpg" alt="Kali Install Language" /></p>

<p><img src="/assets/images/homelab/management-vms-setup/kali-location.jpg" alt="Kali Install Location" /></p>

<p><img src="/assets/images/homelab/management-vms-setup/kali-keyboard.jpg" alt="Kali Install Keyboard" /></p>

<p><img src="/assets/images/homelab/management-vms-setup/kali-host.jpg" alt="Kali Install Hostname" /></p>

<p><img src="/assets/images/homelab/management-vms-setup/kali-domain.jpg" alt="Kali Install Domain Name" /></p>

<p><img src="/assets/images/homelab/management-vms-setup/kali-newuser.jpg" alt="Kali Install New User" /></p>

<p><img src="/assets/images/homelab/management-vms-setup/kali-user.jpg" alt="Kali Install Username" /></p>

<p><img src="/assets/images/homelab/management-vms-setup/kali-pass.jpg" alt="Kali Install Password" /></p>

<p><img src="/assets/images/homelab/management-vms-setup/kali-disk.jpg" alt="Kali Install Entire Disk" /></p>

<p><img src="/assets/images/homelab/management-vms-setup/kali-scsi3.jpg" alt="Kali Install SCSI3" /></p>

<p><img src="/assets/images/homelab/management-vms-setup/kali-partition.jpg" alt="Kali Install Partition" /></p>

<p><img src="/assets/images/homelab/management-vms-setup/kali-finishpart.jpg" alt="Kali Install Finish" /></p>

<p><img src="/assets/images/homelab/management-vms-setup/kali-confirm.jpg" alt="Kali Install Confirm" /></p>

<p><img src="/assets/images/homelab/management-vms-setup/kali-software.jpg" alt="Kali Install Software" /></p>

<p><img src="/assets/images/homelab/management-vms-setup/kali-grub.jpg" alt="Kali Install Grub Boot Loader" /></p>

<p><img src="/assets/images/homelab/management-vms-setup/kali-dev.jpg" alt="Kali Install Grub Location" /></p>

<p><img src="/assets/images/homelab/management-vms-setup/kali-reboot.jpg" alt="Kali Install Reboot" /></p>

<p>With that, the management network VMs are all setup! Don’t forget to take snapshots of all of them at this point. Later, we will be installing Wazuh on the Ubuntu server to act as our SIEM and ingest logs for from the firewall.</p>

<table>
  <tbody>
    <tr>
      <td>we will now move on to importing the isolated VMs and preparing an Ubuntu server for DVWA. You can find it by going to ‘VMWare Pro Homelab</td>
      <td>Metasploitable2 &amp; Vulnhub’ in the [blog] section of this site.</td>
    </tr>
  </tbody>
</table>]]></content><author><name>Ethan Epperson</name></author><category term="blog" /><summary type="html"><![CDATA[Creating the Management VMs]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://eepp14.github.io/assets/images/thumbnails/homelab/Homelab-setup-guide-kali-tsurugi.jpg" /><media:content medium="image" url="https://eepp14.github.io/assets/images/thumbnails/homelab/Homelab-setup-guide-kali-tsurugi.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">VMWare Pro Homelab | Services &amp;amp; Firewall Setup</title><link href="https://eepp14.github.io/blog/homelab-pfsense-webConfigurator/" rel="alternate" type="text/html" title="VMWare Pro Homelab | Services &amp;amp; Firewall Setup" /><published>2024-01-08T00:00:00-05:00</published><updated>2024-01-08T00:00:00-05:00</updated><id>https://eepp14.github.io/blog/homelab-pfsense-webConfigurator</id><content type="html" xml:base="https://eepp14.github.io/blog/homelab-pfsense-webConfigurator/"><![CDATA[<h2 id="webconfigurator-setup-wizard">webConfigurator Setup Wizard</h2>

<p>This post focuses on using pfSense’s web application interface, the webConfigurator, to setup pfSense, enable services, and create firewall aliases/rules. To access the webConfigurator, go to 10.0.11.1. Accept the risk and you will then be greeted with the login page. The credentials are set to the default, so input ‘admin’ for the user and ‘pfSense’ for the password. Once you’re in, you will immediately be placed in the pfSense Setup Wizard. Click ‘» Next’ twice to get to the ‘General Information’ screen.</p>

<p><img src="/assets/images/homelab/webconfigurator-setup/wizard-start.jpg" alt="webConfigurator Setup Wizard" /></p>

<p>On the ‘General Information’ screen we have the option to change the name of our firewall, define a domain name, and set a primary and secondary dns servers. If you’d like to change any of these settings or use your own dns addresses, then go ahead and change them now. I will personally be using Cloudflare’s Secure DNS IPv4 addresses as they offer added malware protection. Note that we will have to enable DNS Query Forwarding if we don’t want our DNS configurations to be overridden. We also need to uncheck the ‘Override DNS’ box.</p>

<p><img src="/assets/images/homelab/webconfigurator-setup/wizard-general.jpg" alt="webConfigurator Setup Wizard" /></p>

<p>Leave the timezone screen as is unless you have internal NTP servers on your network. After that we have the ‘Configure WAN interface’ screen. We don’t need to mess with this page too much as we already did most of the legwork in the pfSense command line. We will let local DHCP handle the IP for WAN. We only need to uncheck ‘Block RFC1918 Private Networks’ and ‘Block bogon networks’ as we will be configuring our own default deny rules. The next screen involves the LAN interface IP. We’ve already set this, so we can skip this part.</p>

<p><img src="/assets/images/homelab/webconfigurator-setup/wizard-blockrules.jpg" alt="webConfigurator Disable Block Rules" /></p>

<p><img src="/assets/images/homelab/webconfigurator-setup/wizard-lan.jpg" alt="webConfigurator LAN Setup" /></p>

<p>On this screen we will need to enter a new admin password. Store it in a secure location such as a password manager. Click through to the next screen and refresh when you are asked. Wait for the setup to finish, and congrats you’ve made it through the initial webConfigurator setup. You will then be booted to the dashboard to accept the copyright agreement. On the dashboard is where we can view information about our system, disk usage, and which interfaces are connected to pfSense.</p>

<p>It’s always good practice to make sure pfSense is up to date. We can check the update status by going to ‘System’ → ‘Updates’ → ‘System Updates’. Everything should be up to date because we used the most recent ISO for installation. Before we added Cloudflares public DNS servers in the wizard, but we are also going to add some extra Quad 9 DNS servers. Under ‘DNS Server Settings’ make sure to add them below the Cloudflare addresses. We also need to make sure that ‘Allow DNS server list to be overridden by DHCP/PPP on WAN or remote OpenVPN server’ is disabled so that our servers are not overridden by DHCP. If you’d like to use dark mode, go to ‘System’ → ‘General Setup’ → ‘webConfigurator’ and there you can change the theme from the dropdown.</p>

<p><img src="/assets/images/homelab/webconfigurator-setup/wc-updates.jpg" alt="webConfigurator System Updates" /></p>

<p><img src="/assets/images/homelab/webconfigurator-setup/wc-dns.jpg" alt="webConfigurator DNS Servers" /></p>

<p><img src="/assets/images/homelab/webconfigurator-setup/wc-theme.jpg" alt="webConfigurator Theme Selection" /></p>

<h2 id="enabling-network-services">Enabling Network Services</h2>

<p>We are ready to setup the services we wish to use. We will be making use of DNS query forwarding for caching, NTP for accurate time-keeping, and DHCP for static IP allocation (although we will get to this at a later part). Let’s start with DNS forwarding first since the setup wizard directed us to make DNS resolver changes in order to use the manual DNS servers we configured.</p>

<h2 id="dns-query-forwarding">DNS Query Forwarding</h2>

<p>Head to ‘Services’ → ‘DNS Resolver’. The DNS resolver should be enabled by default. Under ‘Network Interfaces’, highlight ‘LAN’, ‘OPT1’, ‘OPT2’ and ‘Localhost’ by ctrl-clicking them, and then highlight WAN in ‘Outgoing Network Interfaces’. Check the box for ‘Enable Forwarding Mode’. You can enable DoT if you’d like, but I will not be doing so. Save and apply your changes. If you need to troubleshoot DNS issues then you can go to ‘Diagnostics’ → ‘DNS Lookup’ to run commands and make sure that connections are being established. If not, check the DNS addresses you set and make sure you didn’t make a typo.</p>

<p><img src="/assets/images/homelab/webconfigurator-setup/dnsresolver-interfaces.jpg" alt="DNS Resolver Network Interfaces" /></p>

<p><img src="/assets/images/homelab/webconfigurator-setup/dnsresolver-forwarding.jpg" alt="DNS Resolver Forwarding" /></p>

<h2 id="enabling-ntp">Enabling NTP</h2>

<p>In the setup wizard we decided to use the pfSense NTP server, in this section we are going to configure it’s settings. NTP is used to synchronize clock times in networks. Many critical services require accurate time keeping to function properly. Go to ‘Services’ → ‘NTP’. ctrl-click ‘LAN’, ‘OPT1’, and ‘OPT2’. We are going to add some additional North American time servers from pool.ntp.org. They should all be of type ‘Pool’ by default, but if not then change them. NTP is now properly configured.</p>

<p><img src="/assets/images/homelab/webconfigurator-setup/wc-ntp.jpg" alt="NTP Configuration" /></p>

<h2 id="firewall-alias-and-firewall-rules">Firewall Alias and Firewall Rules</h2>

<p>In pfSense, we are able to create aliases that allow groupings of ports, hosts, network ranges, IP addresses, and URLS under a single name. Instead of manually specifying multiple IPs for a firewall rule, we can simply point it to the aliases we create making firewall rule creation much less tedious. We are going to need to create several aliases. For that we need to go to ‘Firewall’ → ‘Aliases’. The ‘IP’ and ‘Ports’ tabs will be the main focus. Make sure your aliases looks identical to the ones below, and don’t forget to save and apply changes.</p>

<p><img src="/assets/images/homelab/webconfigurator-setup/fw-ip-aliases.jpg" alt="Firewall IP Aliases Creation" /></p>

<p><img src="/assets/images/homelab/webconfigurator-setup/fw-port-aliases.jpg" alt="Firewall Port Aliases Creation" /></p>

<p>Now that our aliases are created, we can move onto creating the firewall rules. Let’s look at an example first. Head to ‘Firewall’ → ‘Rules’ → ‘LAN’. It is incredibly important to note, <em>firewall rules are executed in a first to last, top to bottom order.</em> We always need to be very careful about how we place them. When you arrive at the LAN tab, you will see three default rules. The topmost one is an anti-lockout rule that allows HTTP/HTTPS traffic to access pfSense on the LAN interface. The other two rules allow IPv4/6 outbound traffic from the LAN. We cannot drag the lockout rule around as it must always come first. Other rules are able to be placed in whichever order we choose. Let’s go ahead and delete the bottom two rules as we won’t need those in our LAN policy. Let’s also create a better anti-lockout rule as an example (We will be disabling the default anti-lockout rule later). Click on the anti-lockout rule and then the ‘Add rule to end of the list’ option (the add button with the down arrow marker). A new window will open in which we can create our rule. Make sure it looks similar to the image below. Save and apply changes.</p>

<p><img src="/assets/images/homelab/webconfigurator-setup/fw-sample-rule.jpg" alt="Firewall LAN Rules Example" /></p>

<p>Now that we understand proper firewall rule order and how to create rules. Let’s create our policies for WAN, LAN, OPT1, and OPT2 in that order. Make sure that your rules match the images provided. I will explain each rule-set as we go.</p>

<ol>
  <li><strong>WAN</strong>:</li>
  <li>The firewall will automatically create a default deny-all rule for inbound traffic to the WAN, but this rule serves as an explicit visual notifier</li>
</ol>

<p><img src="/assets/images/homelab/webconfigurator-setup/fw-wan.jpg" alt="Firewall WAN Rules" /></p>

<ol>
  <li><strong>LAN</strong>: (The default anti-lockout rule is not included in this list because we will be removing it later)
    <ul>
      <li>A better anti-lockout rule that only allows us to access the webConfigurator via the LAN address at port 443(HTTPS)</li>
      <li>Rules for allowing VMs in the management network to access the DNS and NTP services</li>
      <li>A rule that lets the hosted hypervisor make SSH connections to our LAN interface</li>
      <li>A rule that lets the hosted hypervisor make RDP connections to our active directory network</li>
      <li>A rule for establishing an HTTP/HTTPS connection from our Kali VM to our DVWA machine. We will not be accessing the web application on the machine that DVWA is installed on, but through Kali instead.</li>
      <li>A rule for establishing any IPv4 connection from Kali to the vulnerable VMs</li>
      <li>A rule for establishing any IPv4 connection from Kali to the AD VMs</li>
      <li>An RFC1918 rule meant to enforce segmentation. It’s essential that we have all rules dealing with RFC1918 addresses above this rule so services or other important communications are not blocked.</li>
      <li>Rules that allow the management machines to make outbound HTTP/HTTPS, NTP, and ICMP connections</li>
      <li>An explicit deny-any rule that blocks all other inbound connections</li>
    </ul>
  </li>
</ol>

<p><img src="/assets/images/homelab/webconfigurator-setup/fw-lanrules.jpg" alt="Firewall LAN Rules" /></p>

<ol>
  <li><strong>OPT1</strong>:
    <ul>
      <li>A rule to block our vulnerable VMs from making outbound connections, enforcing proper security in isolating the network from other segments and the internet</li>
      <li>Rule for allowing VMs in the isolated network to access the DNS and NTP services.</li>
      <li>An RFC1918 rule meant to enforce segmentation</li>
      <li>Rules that allow the isolated machines to make outbound HTTP/HTTPS, NTP, and ICMP connections</li>
      <li>An explicit deny-any rule that blocks all other inbound connections</li>
    </ul>
  </li>
</ol>

<p>You might have noticed that our vulnerable machines alias did not include the Linux machine that DVWA will be running on. That is because we need the machine to be able to use HTTPS/NTP so we can install DVWA. Once we have everything setup, we will be deleting those permissions and adding the machine to the vulnerable machines alias.</p>

<p><img src="/assets/images/homelab/webconfigurator-setup/fw-opt1rules.jpg" alt="Firewall OPT1 Rules" /></p>

<ol>
  <li><strong>OPT2</strong>:
    <ul>
      <li>A rule that allows Winlogbeats traffic to be sent to the SIEM</li>
      <li>Rules for allowing VMs in the AD network to access the DNS and NTP services.</li>
      <li>An RFC1918 rule meant to enforce segmentation</li>
      <li>Rules that allow the AD machines to make outbound HTTP/HTTPS, NTP, and ICMP connections</li>
      <li>An explicit deny-any rule that blocks all other inbound connections</li>
    </ul>
  </li>
</ol>

<p><img src="/assets/images/homelab/webconfigurator-setup/fw-opt2rules.jpg" alt="Firewall OPT2 Rules" /></p>

<table>
  <tbody>
    <tr>
      <td>Congrats, you’ve made it through all of the services and firewall setup! We can now move onto creating the management network virtual machines. You can find the next part, ‘VMWare Pro Homelab</td>
      <td>Tsurugi &amp; Kali Linux Setup’, in the [blog] section of this site.</td>
    </tr>
  </tbody>
</table>]]></content><author><name>Ethan Epperson</name></author><category term="blog" /><summary type="html"><![CDATA[webConfigurator Setup Wizard]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://eepp14.github.io/assets/images/thumbnails/homelab/Homelab-setup-guide-pfsense.jpg" /><media:content medium="image" url="https://eepp14.github.io/assets/images/thumbnails/homelab/Homelab-setup-guide-pfsense.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">VMWare Pro Homelab | pfSense Setup</title><link href="https://eepp14.github.io/blog/homelab-pfsense/" rel="alternate" type="text/html" title="VMWare Pro Homelab | pfSense Setup" /><published>2024-01-06T00:00:00-05:00</published><updated>2024-01-06T00:00:00-05:00</updated><id>https://eepp14.github.io/blog/homelab-pfsense</id><content type="html" xml:base="https://eepp14.github.io/blog/homelab-pfsense/"><![CDATA[<h2 id="pfsense-installation">pfSense Installation</h2>

<p>After you’ve obtained the pfSense ISO, we can begin to create the VM. Click ‘Create a New Virtual Machine’ and choose the ‘Typical’ installation type. When you get to the proper screen, choose the ‘Installer disc image file (iso)’ and find the location where you saved the ISO. Continue and rename your virtual machine along with choosing a location to where VM data will stored if you never changed the default. Change the ‘Maximum disk size (GB)’ to 5 (we can ignore recommended size here), and make sure to choose ‘Store virtual disk as a single file’.</p>

<p><img src="/assets/images/homelab/pfsense-setup/pfsense-iso.jpg" alt="pfSense ISO Location" /></p>

<p><img src="/assets/images/homelab/pfsense-setup/pfsense-location.jpg" alt="pfSense ISO Mounting" /></p>

<p><img src="/assets/images/homelab/pfsense-setup/pfsense-disk.jpg" alt="pfSense Disk Space" /></p>

<p>Next, we will arrive at the screen asking us if we are ready to create our virtual machine, we are not. Instead, let’s click ‘Customize Hardware’. Once there we can remove the USB and sound card by selecting them and clicking ‘Remove…’. Once removed your hardware screen should look like the image below.</p>

<p><img src="/assets/images/homelab/pfsense-setup/pfsense-removed.jpg" alt="pfSense Disk Space" /></p>

<p>Let’s go ahead and configure the pfSense adapters. We are going to need to create 3 more adapters so click ‘Add…’ to add them. Now we can configure each as such:</p>

<ul>
  <li>
    <p><strong>Network Adapter 1</strong>: This adapter is here by default. Make sure to change ‘NAT’ to ‘Bridged’, and have ‘Connect at power on’ selected. Click ‘Advanced…’. There is the option to generate a new MAC address, so go ahead and do that. Before closing out make sure to copy the new MAC and paste it into your note-taking application.
<img src="/assets/images/homelab/pfsense-setup/pfsense-adapter.jpg" alt="Adapter 1 Settings" />
<img src="/assets/images/homelab/pfsense-setup/pfsense-mac.jpg" alt="Adapter 1 MAC" /></p>
  </li>
  <li>
    <p><strong>Network Adapter 2</strong>: Select ‘Host-Only’. Make sure ‘Connect at power on’ is selected. Click ‘Advanced…’ and once more generate a new MAC address.
<img src="/assets/images/homelab/pfsense-setup/pfsense-adapter2.jpg" alt="Adapter 2 Settings" />
<img src="/assets/images/homelab/pfsense-setup/pfsense-mac2.jpg" alt="Adapter 2 MAC" /></p>
  </li>
  <li>
    <p><strong>Network Adapter 3</strong>: For this one we need to select ‘Custom’ and then choose ‘VMnet2’. Make sure ‘Connect at power on’ is selected. Click ‘Advanced…’ and do the same thing yet again for MAC address.
<img src="/assets/images/homelab/pfsense-setup/pfsense-adapter3.jpg" alt="Adapter 3 Settings" />
<img src="/assets/images/homelab/pfsense-setup/pfsense-mac3.jpg" alt="Adapter 3 MAC" /></p>
  </li>
  <li>
    <p><strong>Network Adapter 4</strong>: Finally, we need to select ‘Custom’ and then choose ‘VMnet3’. Make sure ‘Connect at power on’ is selected. Click ‘Advanced…’ and do the same thing one last time for MAC address.
<img src="/assets/images/homelab/pfsense-setup/pfsense-adapter4.jpg" alt="Adapter 4 Settings" />
<img src="/assets/images/homelab/pfsense-setup/pfsense-mac4.jpg" alt="Adapter 4 MAC" /></p>
  </li>
</ul>

<p>Now we can close out of the hardware selection window and go back to the ready screen. Ensure that everything looks as it should in the settings. This would be a great time to open up Obsidian or whatever note-taking application you use and add the specs &amp; settings of your VM. It’s always best practice to note-take as you go when deploying new machines. Uncheck ‘Power on this virtual machine after creation’, and then click ‘Finish’. The VM is now created.</p>

<p><img src="/assets/images/homelab/pfsense-setup/pfsense-obsidian.jpg" alt="pfSense Obsidian Notes" /></p>

<p><img src="/assets/images/homelab/pfsense-setup/pfsense-create.jpg" alt="pfSense VM Ready to Create" /></p>

<h2 id="pfsense-os-installation">pfSense OS Installation</h2>

<p>It’s always best practice to create an initial snapshot of the VM before, as well as immediately after, OS installation. Incase there is a failure in the process we can rollback to the snapshot. We can take a snapshot by right clicking the VM we want to snapshot → ‘Snapshot’ → ‘Take Snapshot…’. Name your snapshot and add an appropriate description for it.</p>

<p><img src="/assets/images/homelab/pfsense-setup/pfsense-snapshot.jpg" alt="Initial pre-OS Snapshot" /></p>

<p>Now we can boot up the machine and install the operating system onto it. Once it is done booting from the ISO, we will be placed at the pfSense installer wizard. We need to use the arrow keys to navigate the GUI. If you need to escape from the VM environment back to your host machine then click ctrl-alt. Let’s accept the copyright agreement and hit enter. We of course want to choose the ‘Install’ option.</p>

<p><img src="/assets/images/homelab/pfsense-setup/installer-copyright.jpg" alt="Installer Copyright Agreement Screen" /></p>

<p><img src="/assets/images/homelab/pfsense-setup/installer-install.jpg" alt="Installer Installation Screen" /></p>

<p>We want to use ‘Auto (UFS)’. After selection it, click through the screens as follows: ‘[Entire Disk]’ → ‘[Finish]’ → ‘MBR DOS Partitions’ → ‘[Commit]’ → ‘[Reboot]’.</p>

<p><img src="/assets/images/homelab/pfsense-setup/installer-ufs.jpg" alt="Installer Installation Screen" /></p>

<p><img src="/assets/images/homelab/pfsense-setup/installer-disk.jpg" alt="Installer Disk Partition Screen" /></p>

<p><img src="/assets/images/homelab/pfsense-setup/installer-editor.jpg" alt="Installer Partition Editor Screen" /></p>

<p><img src="/assets/images/homelab/pfsense-setup/installer-scheme.jpg" alt="Installer Partition Scheme Screen" /></p>

<p><img src="/assets/images/homelab/pfsense-setup/installer-commit.jpg" alt="Installer Commit Changes Screen" /></p>

<p><img src="/assets/images/homelab/pfsense-setup/installer-reboot.jpg" alt="Installer Reboot Screen" /></p>

<p>Once installation is finished and the machine is rebooted you will be greeted with the pfSense command-line interface. Before we proceed, we must power down the pfSense VM and go to the hardware settings of the machine. We no longer need the cd/dvd drive now that the OS is installed so click on it and remove it like we did with the USB and sound card from before.</p>

<h2 id="pfsense-command-line">pfSense Command Line</h2>

<p>Let’s power the VM back on and at this point we can make the necessary configurations. We will need to assign the VM interfaces we created (Adapters 1, 2, 3, 4) to the logical pfSense interfaces of WAN, LAN, OPT1, and OPT2 respectively. I hope you recorded the MAC addresses of each adapter because this is where we will need them. Enter ‘1’ so that we can assign the interfaces.</p>

<p><img src="/assets/images/homelab/pfsense-setup/command-interfaces.jpg" alt="pfSense Command Line Assign Interfaces" /></p>

<p>Notice that there are four options em0, em1, and em2, and em3. These interfaces correspond to the adapters we set up earlier. Take note of the MAC addresses assigned to each one.</p>

<p><img src="/assets/images/homelab/pfsense-setup/interfaces-options.jpg" alt="pfSense Interface Options" /></p>

<p>We need to cross-reference our notes to know which one is which. For me, it would appear that the bridged adapter corresponds to em0, em1 to host-only adapter, and our custom VMnet2 adapter to em2. For you, it could be different. Just make sure that they match up correctly when we perform the setup. Once we’ve done this, follow the prompts as outlined below:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Should VLANs be set up now [y|n]? n

Enter the WAN interface name or 'a' for auto-detection (em0 em1 em2 or a): em0

Enter the LAN interface name or 'a' for autodetection NOTE: this enables full Firewalling/NAT mode. (em1 em2 a or nothing if finished): em1

Enter the Optional 1 interface name or 'a' for auto-detection (em2 a or nothing if finished): em2

Enter the Optional 2 interface name or 'a' for auto-detection (em2 a or nothing if finished): em3

The interfaces will be assigned as follows: 
WAN -&gt; em0 
LAN -&gt; em1 
OPT1 -&gt; em2
OPT2 -&gt; em3 

Do you want to proceed [y|n]? y
</code></pre></div></div>

<p>Once completed, this is what you should see as demonstrated by the image below.</p>

<p><img src="/assets/images/homelab/pfsense-setup/interfaces-configured.jpg" alt="pfSense Command Line Interfaces Created" /></p>

<p>Remember when I said we would be assigning the IP addresses of the interfaces in the previous post? Well now is the time. It would be a good time to double check and make sure DHCP is not enabled for any of the interfaces in VMWare. Enter ‘2’ so that we can set the IP addresses.</p>

<p><img src="/assets/images/homelab/pfsense-setup/command-setip.jpg" alt="pfSense Command Line Set IP addresses" /></p>

<p>For subnet masks you could do any class-C in the range of /29 (6 usable hosts) down to /24 (254 usable hosts) depending on how many machines you know you’ll want/need in each subnet. I’d recommend just leaving it at 24 if you don’t want to worry about ever exceeding the limit cause it’s impossible you’ll ever need that many usable hosts. Do the following for each separate interface:</p>

<ol>
  <li><strong>LAN</strong>:</li>
</ol>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Available interfaces: 
1 – WAN ([interface name] – [dhcp/dhcp6/static address configuration]) 
2 – LAN ([interface name]) 
3 – OPT1 ([interface name])
4 – OPT2 ([interface name])

Enter the number of the interface you wish to configure: 2

Configure IPv4 address LAN interface via DHCP? (y/n) n

Enter the new LAN IPv4 address: Press &lt;ENTER&gt; for none: 
&gt; 10.0.11.1

Subnet masks are entered as bit counts (as in CIDR notation) in pfSense 
e.g. 255.255.255.0 = 24 
     255.255.0.0 = 16 
     255.0.0.0 = 8

Enter the new LAN IPv4 subnet bit count (1 to 31): 
&gt; 24

For WAN, enter the new LAN IPv4 upstream gateway address. For a LAN, press &lt;ENTER&gt; for none: 
&gt; &lt;ENTER&gt;

Configure IPv6 address LAN interface via DHCP? (y/n) n

Enter the new LAN IPv6 address. Press &lt;ENTER&gt; for none: &gt;
 &lt;ENTER&gt;

Do you want to enable the DHCP server on LAN? (y/n) y 

Enter the start address of the IPv4 client address range: 10.0.11.10 
Enter the end address of the IPv4 client address range: 10.0.11.254 

Disabling IPv6 DHCPD… Do you want to revert to HTTP as the webConfigurator protocol? (y/n) n

Please wait while the changes are saved to LAN… 
Reloading filter… 
Reloading routing configuration… 
DHCPD…

The IPv4 LAN address has been set to 10.0.11.1/24 You can now access the webConfigurator by opening the following URL in your web browser:
https://10.0.11.1

</code></pre></div></div>

<ol>
  <li><strong>OPT1</strong>:</li>
</ol>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Available interfaces: 
1 – WAN ([interface name] – [dhcp/dhcp6/static address configuration]) 
2 – LAN ([interface name] – static) 
3 – OPT1 ([interface name])
4 – OPT2 ([interface name])

Enter the number of the interface you wish to configure: 3

Configure IPv4 address OPT1 interface via DHCP? (y/n) n

Enter the new OPT1 IPv4 address: Press &lt;ENTER&gt; for none: 
&gt; 10.0.12.1

Subnet masks are entered as bit counts (as in CIDR notation) in pfSense 
e.g. 255.255.255.0 = 24 
     255.255.0.0 = 16 
     255.0.0.0 = 8

Enter the new OPT1 IPv4 subnet bit count (1 to 31): 
&gt; 24

For WAN, enter the new OPT1 IPv4 upstream gateway address. For a LAN, press &lt;ENTER&gt; for none: 
&gt; &lt;ENTER&gt;

Configure IPv6 address OPT1 interface via DHCP? (y/n) n

Enter the new OPT1 IPv6 address. Press &lt;ENTER&gt; for none: &gt;
 &lt;ENTER&gt;

Do you want to enable the DHCP server on OPT1? (y/n) y 

Enter the start address of the IPv4 client address range: 10.0.12.10 
Enter the end address of the IPv4 client address range: 10.0.12.254 

Disabling IPv6 DHCPD… Do you want to revert to HTTP as the webConfigurator protocol? (y/n) n

Please wait while the changes are saved to OPT1… 
Reloading filter… 
Reloading routing configuration… 
DHCPD…

The IPv4 OP1 address has been set to 10.0.12.1/24 You can now access the webConfigurator by opening the following URL in your web browser:
https://10.0.12.1

</code></pre></div></div>
<ol>
  <li><strong>OPT2</strong>:</li>
</ol>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Available interfaces: 
1 – WAN ([interface name] – [dhcp/dhcp6/static address configuration]) 
2 – LAN ([interface name] – static) 
3 – OPT1 ([interface name] - static)
4 - OPT2 ([interface name])

Enter the number of the interface you wish to configure: 3

Configure IPv4 address OPT2 interface via DHCP? (y/n) n

Enter the new OPT2 IPv4 address: Press &lt;ENTER&gt; for none: 
&gt; 10.0.13.1

Subnet masks are entered as bit counts (as in CIDR notation) in pfSense 
e.g. 255.255.255.0 = 24 
     255.255.0.0 = 16 
     255.0.0.0 = 8

Enter the new OPT2 IPv4 subnet bit count (1 to 31): 
&gt; 24

For WAN, enter the new OPT2 IPv4 upstream gateway address. For a LAN, press &lt;ENTER&gt; for none: 
&gt; &lt;ENTER&gt;

Configure IPv6 address OPT2 interface via DHCP? (y/n) n

Enter the new OPT2 IPv6 address. Press &lt;ENTER&gt; for none: &gt;
 &lt;ENTER&gt;

Do you want to enable the DHCP server on OPT2? (y/n) y 

Enter the start address of the IPv4 client address range: 10.0.13.10 
Enter the end address of the IPv4 client address range: 10.0.13.254 

Disabling IPv6 DHCPD… Do you want to revert to HTTP as the webConfigurator protocol? (y/n) n

Please wait while the changes are saved to OPT2… 
Reloading filter… 
Reloading routing configuration… 
DHCPD…

The IPv4 OP1 address has been set to 10.0.12.1/24 You can now access the webConfigurator by opening the following URL in your web browser:
https://10.0.13.1

</code></pre></div></div>

<p>After doing this process for LAN, OPT1, and OPT2 you should now see the below screen back at the starting command line. We now see that our IP addresses have been set correctly and DHCP has assigned us an IP address for WAN. Everything should be in working order now!</p>

<p><img src="/assets/images/homelab/pfsense-setup/interfaces-ipconfigured.jpg" alt="pfSense Command Line Completed Setup" /></p>

<p>There’s still two important steps to take before we call it done. First, lets try some quick ping, nslookup, and curl commands to see if we actually have a connection. Enter ‘8’ and then enter these commands:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ping -c 4 8.8.8.8
nslookup www.google.com 
curl -I https://www.google.com
</code></pre></div></div>

<p>If every command goes through successfully, then congrats, you’re online! Let’s power off the machine and take a quick new snapshot of the machine.</p>

<p><img src="/assets/images/homelab/pfsense-setup/pfsense-snapshot2.jpg" alt="pfSense Snapshot After Setup" /></p>

<table>
  <tbody>
    <tr>
      <td>We will move on to configuring the network services and firewall rules in pfSense’s webConfigurator. You can find the next part, ‘VMWare Pro Homelab</td>
      <td>Services &amp; Firewall Setup’, in the [blog] section of this site.</td>
    </tr>
  </tbody>
</table>]]></content><author><name>Ethan Epperson</name></author><category term="blog" /><summary type="html"><![CDATA[pfSense Installation]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://eepp14.github.io/assets/images/thumbnails/homelab/Homelab-setup-guide-pfsense.jpg" /><media:content medium="image" url="https://eepp14.github.io/assets/images/thumbnails/homelab/Homelab-setup-guide-pfsense.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">VMWare Pro Homelab | VMWare Setup</title><link href="https://eepp14.github.io/blog/homelab-vmware/" rel="alternate" type="text/html" title="VMWare Pro Homelab | VMWare Setup" /><published>2024-01-05T00:00:00-05:00</published><updated>2024-01-05T00:00:00-05:00</updated><id>https://eepp14.github.io/blog/homelab-vmware</id><content type="html" xml:base="https://eepp14.github.io/blog/homelab-vmware/"><![CDATA[<h1 id="vmware-preferences">VMWare Preferences</h1>

<p>After you have downloaded and installed VMWare, you will see the ‘Edit’ dropdown menu in the toolbar at the top. At the bottom of edit is ‘Preferences…’. Here we can potentially change some settings. If you wish to select a different directory for your VM installations then you can go ahead and change it under ‘Default location for virtual machines’ on the ‘Workspace’ tab.</p>

<p><img src="/assets/images/homelab/vmware-pro-setup/vmware-pref.jpg" alt="VMWare Prefs" /></p>

<p>If we click on the ‘Memory’ tab, you can select how much reserved memory allocation you wish to use for VMs. If you have the recommended amount of memory then max out the the reserved memory allocation for VMs leaving at least 4GB for your host machine. If you’re still trying to complete this lab and you’re under the minimum requirements, then you can select ‘Allow most virtual machine memory to be swapped’ as well as lowering the memory allocations for each machine when creating them. Keep in mind this will tank performance heavily.</p>

<p><img src="/assets/images/homelab/vmware-pro-setup/vmware-memory.jpg" alt="VMWare Memory Allocation" /></p>

<h2 id="virtual-network-editor">Virtual Network Editor</h2>

<p>In Workstation Pro, we have the option to use the virtual network editor to configure our custom virtual networks. This feature only exists under Pro, so if you haven’t obtained it yet then do so now. The VNE can be found under the edit dropdown menu. Permissions will have to be granted to allow the application to make changes to network settings. Click ‘Change Settings’ and the click yes when prompted.</p>

<p>By default, VMWare will set VMnet0 to a bridged connection that automatically connects with any network interface in your home network. We could configure the auto settings and uncheck whichever adapter we don’t want to be used, but we will not be doing this. We can configure it manually to whichever device we would like to use.</p>

<p><img src="/assets/images/homelab/vmware-pro-setup/vmnet0-setup.jpg" alt="VMWare VMnet0 Configuration" /></p>

<p>Now we need to create three additional virtual networks, so click ‘Add Network’ and add all of them. For VMnet 1-3  these are the configurations we want:</p>

<ul>
  <li><strong>VMnet1</strong>: Leave as ‘Host-only’ and uncheck the box for ‘Use local DHCP service to distribute IP address to VMs’. Don’t worry about subnet IPs right now, we will set those in pfSense later.</li>
</ul>

<p><img src="/assets/images/homelab/vmware-pro-setup/vmnet1-setup.jpg" alt="VMnet1 Configuration" /></p>

<ul>
  <li><strong>VMnet2 &amp; 3</strong>: These should have the same configuration. Set as ‘Host-only’ and uncheck the boxes for ‘Connect a host virtual adapter to this network’ and ‘Use local DHCP service to distribute IP address to VMs’.</li>
</ul>

<p><img src="/assets/images/homelab/vmware-pro-setup/vmnet2&amp;3-setup.jpg" alt="VMnet2 &amp; 3 Configuration" /></p>

<h2 id="vmnet1-host-virtual-adapter">VMnet1 Host Virtual Adapter</h2>

<p>Now we need to assign the IP for the host virtual adapter of VMnet1. Hold win-R on your keyboard to bring up the run window. Input ‘ncpa.cpl’ and click enter. Find the VMnet1 adapter and right click, select ‘Properties’. Go to ipv4 and select ‘Properties’ once more.</p>

<p><img src="/assets/images/homelab/vmware-pro-setup/run-ncpa.jpg" alt="Run Window" /></p>

<p><img src="/assets/images/homelab/vmware-pro-setup/vmnet1-control-panel.jpg" alt="Control Panel" /></p>

<p><img src="/assets/images/homelab/vmware-pro-setup/vmnet1-ipv4.jpg" alt="VMnet1 Adapter IPv4" /></p>

<p>Here we will configure the IP address for the adapter as ‘10.0.1.2’. Make sure it looks identical to what I have below. Keep the subnet mask as is, and make sure that the DNS entries remain blank.</p>

<p><img src="/assets/images/homelab/vmware-pro-setup/vmnet1-ipv4-setip.jpg" alt="VMnet1 Adapter IPv4 Properties" /></p>

<table>
  <tbody>
    <tr>
      <td>Congrats, we’ve done all of the preliminary work in VMWare! We can now move onto setting up the pfSense router/firewall. You can find the next post, ‘VMWare Pro Homelab</td>
      <td>pfSense Setup’, in the [blog] section of this site.</td>
    </tr>
  </tbody>
</table>]]></content><author><name>Ethan Epperson</name></author><category term="blog" /><summary type="html"><![CDATA[VMWare Preferences]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://eepp14.github.io/assets/images/thumbnails/homelab/Homelab-setup-guide.jpg" /><media:content medium="image" url="https://eepp14.github.io/assets/images/thumbnails/homelab/Homelab-setup-guide.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>